{"name":"QueryBuilder","body":"Features\r\n--------\r\n\r\n### Easy to use\r\n\r\nYou don't have to remember complete SQL syntax anymore.\r\n\r\n``` php\r\n<?php\r\nQuery::select()->from('users')->where('age = ?', $age)->limit(5);\r\n```\r\n\r\nis equivalent to\r\n\r\n``` php\r\n<?php\r\nQuery::select()->limit(5)->from('users')->where('age = ?', $age);\r\n```\r\n\r\n### Secure\r\n\r\nUsing placeholders to bind value\r\n\r\n``` php\r\n<?php\r\nQuery::select()->where('foo = ? and bar = ?', $foo, $bar);\r\n```\r\n\r\n### Reusable\r\n\r\nAppend or replace statement, run again.\r\n\r\n``` php\r\n<?php\r\n$query = Query::insert()\r\n  ->into('log');\r\n$query = doSomething($query);\r\n$query = doSomethingAgain($query);\r\n$query->execute();\r\n```\r\n\r\nInstallation\r\n------------\r\n\r\n### Installing via Git\r\n\r\n``` sh\r\ngit clone git://github.com/valnur/QueryBuilder.git\r\n```\r\n\r\n### Installing from tarball\r\n\r\n[Download 1.0.1](#)\r\n\r\nRequirements\r\n------------\r\n\r\nAt least PHP 5.0.0 required.\r\n\r\nUsage\r\n-----\r\n\r\nConnect to MySQL\r\n\r\n``` php\r\n<?php\r\nQuery::connect($host, $user, $password, $database);\r\n```\r\n\r\nExecutes SELECT statement\r\n\r\n``` php\r\n<?php\r\n$result = Query::select()\r\n ->from('table t')\r\n  ->where('id = ?', $id)\r\n   ->orderBy('updated desc')\r\n    ->limit(20)\r\n     ->fetchAll();\r\n//returns array\r\n```\r\n\r\nExecutes INSERT statement\r\n\r\n``` php\r\n<?php\r\nQuery::insert()\r\n ->into('table')\r\n  ->columns(array('id', 'title', 'desc'))\r\n   ->values(array(1, 'foo', 'bar'))\r\n    ->execute();\r\n//returns boolean\r\n```\r\n\r\nExecutes UPDATE statement\r\n\r\n``` php\r\n<?php\r\nQuery::update()\r\n ->table('table')\r\n  ->columns(array('id', 'title', 'desc'))\r\n   ->values(array(1, 'foo', 'bar'))\r\n    ->where('id = ?', $id)\r\n     ->execute();\r\n//returns boolean\r\n```\r\n\r\nExecutes DELETE statement\r\n\r\n``` php\r\n<?php\r\nQuery::delete()\r\n ->table('table')\r\n  ->where('id = ?', $id)\r\n   ->andWhere('status = ?', 'trash')\r\n    ->execute();\r\n//returns boolean\r\n```\r\n\r\nExecutes SELECT statement for pagination\r\n\r\n``` php\r\n<?php\r\nQuery::select()\r\n ->calcFoundRows()\r\n  ->from('posts p')\r\n   ->columns('*, c.name')\r\n    ->leftJoin('category c on p.category_id = c.id')\r\n     ->where('p.pubdate < now()')\r\n      ->page($page, $limit)\r\n       ->fetchAll();\r\n//returns array\r\n```\r\n\r\nTransactions\r\n\r\n``` php\r\n<?php\r\nQuery::begin();\r\n\r\nQuery::insert()\r\n ->into('table')\r\n  ->columns(array_keys($data))\r\n   ->values(array_values($data))\r\n    ->execute();\r\n\r\nQuery::commit();\r\n//or\r\nQuery::rollback();\r\n```\r\n\r\nCount rows\r\n\r\n``` php\r\n<?php\r\nQuery::select()\r\n ->from('table')\r\n  ->count();\r\n//return integer\r\n\r\n```\r\n\r\nExecute SQL manually\r\n\r\n``` php\r\n<?php\r\nQuery::sql('desc mydb.posts');\r\n// return PDOStatement\r\n```\r\n\r\nAuthor\r\n------\r\n\r\n@valnur <http://www.valnur.net>","tagline":"MySQL query builder for PHP","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}